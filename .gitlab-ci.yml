image: gradle:alpine

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
   - chmod +x gradlew
   - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
 paths:
   - .gradle/wrapper
   - .gradle/caches
   - build/

stages:
  - build
  - deploy

build:
  stage: build
  only:
  - master
  script:
  - ./gradlew clean
  - ./gradlew build -x test
  - echo "build"
  artifacts:
    paths:
    - build/libs/*.jar

deploy:
  image: python:latest
  stage: deploy
  dependencies:
    - build
  variables:
    S3_BUCKET: $S3_BUCKET
  before_script:
    - pip install awscli
  script:
    - aws s3 cp build/libs/*.jar s3://$S3_BUCKET/
  only:
    - master


# docker-build:
#   image: docker:latest
#   stage: package
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_DRIVER: overlay2
#     DOCKER_TLS_CERTDIR: ""
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker pull $CI_REGISTRY_IMAGE:latest || true
#     - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    # - docker login -u "$CD_REGISTRY_USER" -p "$CD_REGISTRY_PASSWORD" $CD_REGISTRY
    # - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    # - docker push $CI_REGISTRY_IMAGE:latest
  # only:
  #   - master
